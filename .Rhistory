library(xlsx)
df2 <- read.xlsx("UrbanPop.xlsx", sheetIndex = 1)
df2
# Pacote gdata
detach(package:xlsx)
library(gdata)
arq1 <- xls2csv("planilha1.xlsx",
sheet = 1,
na.strings = "EMPTY")
arq1
read.csv(arq1)
library(readr)
# RMongoDB
# Instalação do Pacote
install.packages("devtools")
install_github("mongosoup/rmongodb", force = TRUE)
install_github("mongosoup/rmongodb", force = TRUE)
# RMongoDB
# Instalação do Pacote
install.packages("devtools")
library("devtools")
install_github("mongosoup/rmongodb", force = TRUE)
library(rmongodb)
# Criando a conexão
help("mongo.create")
mongo <- mongo.create()
mongo
# Checando a conexão
mongo.is.connected(mongo)
mongo.get.databases(mongo)
if(mongo.is.connected(mongo) == TRUE) {
mongo.get.databases(mongo)
}
# Armazenando o nome de uma das coleções
coll <- "users.contatos"
# Contando os registros em uma coleção
help("mongo.count")
mongo.count(mongo, coll)
# Buscando um registro em uma coleção
mongo.find.one(mongo, coll)
# Obtendo um vetor de valores distintos das chaves de uma coleção
res <- mongo.distinct(mongo, coll, "city")
head(res)
# Obtendo um vetor de valores distintos das chaves de uma coleção
# E gerando um histograma
pop <- mongo.distinct(mongo, coll, "pop")
hist(pop)
# Contando os elementos
nr <- mongo.count(mongo, coll, list('pop' = list('$lte' = 2)))
print( nr )
# Buscando todos os elementos
pops <- mongo.find.all(mongo, coll, list('pop' = list('$lte' = 2)))
head(pops, 2)
# Buscando todos os elementos
pops <- mongo.find.all(mongo, coll, list('pop' = list('$lte' = 2)))
head(pops, 2)
# Encerrando a conexão
mongo.destroy(mongo)
# Criando e validando um arquivo json
library(jsonlite)
json_arquivo <- '{"pop":{"$lte":2}, "pop":{"$gte":1}}'
cat(prettify(json_arquivo))
validate(json_arquivo)
R.Version()
install.packages('rlang')
library(dplyr)
library(hrbrthemes)
library(ggplot2)
library(dplyr)
library(tidyr) #adc por felipe para transpor a coluna em varias colunas
library(ggplot2)
#install.packages("viridis")
library(viridis)
#install.packages("patchwork")
library(patchwork) # Mostrar dois gráficos ao lado
df_total <- read.csv("df_final.csv")
str(df_total)
#Tira os valores de média
df_media=df_total[c(2,6,3,4,5,7,8,9,10,11,12,19,21)]
str(df_media)
#Tira os valores de mediana
df_mediana=df_total[c(2,6,3,4,5,13,14,15,16,17,18,20,22)]
str(df_mediana)
#verificando linhas duplicadas
sum(duplicated(df_total))
#verifica se tem registros nulos
sum(is.na(df_total))
setwd("E:/Estudos/Trabalho_Bloco_A")
getwd()
library(dplyr)
library(tidyr) #adc por felipe para transpor a coluna em varias colunas
library(ggplot2)
#install.packages("viridis")
library(viridis)
#install.packages("patchwork")
library(patchwork) # Mostrar dois gráficos ao lado
df_total <- read.csv("df_final.csv")
View(df_total)
str(df_total)
#Tira os valores de média
df_media=df_total[c(2,6,3,4,5,7,8,9,10,11,12,19,21)]
str(df_media)
#Tira os valores de mediana
df_mediana=df_total[c(2,6,3,4,5,13,14,15,16,17,18,20,22)]
str(df_mediana)
#verificando linhas duplicadas
sum(duplicated(df_total))
#verifica se tem registros nulos
sum(is.na(df_total))
#Estatísticas básicas: mínimos, máximos, médias, desvios, etc. de cada variável;
summary(df_total, maxsum = max(lengths(lapply(df_total, unique))))
#Primeiramente vou gerar um novo dataset filtrando apenas o Brasil para analise (sem levar em consideração por região)
df_total_brasil <- subset(df_total, Sigla_regiao== 'BR')
#Gráfico da variação do dolar e do barril de petroleo (brent)
linhaDolar <- ggplot(data=df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar, group=1), color = "darkred", size=2)+
ggtitle("Cotação dólar 2018-07 até 2020-07") +
ylab("Cotação")
linhaBrent <- ggplot(data=df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoBrentReais, group=2), color = "steelblue", size=2)+
ggtitle("Cotação Barril em Real 2018-07 até 2020-07") +
ylab("Cotação")
linhaDolar+linhaBrent
#gráfico da variação do preço da gasolina pelo produtor
linhaVarProdutor <- ggplot(data=df_total_brasil, aes(x=mes)) +
geom_line(aes(y = mediaPrecoGasolina, group=1), color = "darkred", size=2)+
ggtitle("Preço produtor gasolina 2018-07 até 2020-07") +
ylab("Cotação")
linhaDolar+linhaBrent+linhaVarProdutor
library(modelr)
# plot
df_total %>% ggplot(aes(mes,CotacaoDolar, group = Sigla_regiao)) +geom_line(alpha = 1/3)
# plot
df_total %>% ggplot(aes(mes,CotacaoDolar)) +geom_line(alpha = 1/3)
str(df_media)
# plot
df_total %>% ggplot(aes(mes,CotacaoDolar,group = CotacaoDolar, colour = as.factor(CotacaoDolar))) +geom_line(alpha = 1/3)
# plot
df_total %>% ggplot(aes(mes,CotacaoDolar,group = CotacaoDolar))) +geom_line(alpha = 1/3)
# plot
df_total %>% ggplot(aes(mes,CotacaoDolar,group = CotacaoDolar)) +geom_line(alpha = 1/3)
# plot
df_total %>% ggplot(aes(mes,CotacaoDolar,group = CotacaoDolar)) +geom_line(alpha = 1/3)
ggplot(df_total, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue", linetype="twodash")
ggplot(df_total, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue")
ggplot(df_total, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred")
ggplot(df_total, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred")
ggplot(df_total, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue")
ggplot(df_total, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue")
ggplot(df_total[Sigla_regiao == 'BR'], aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue")
df_total[Sigla_regiao == 'BR']
df_total(Sigla_regiao == 'BR')
df_total(Sigla_regiao = 'BR')
df_total[Sigla_regiao = 'BR']
ggplot(subset(df_total, Sigla_regiao== 'BR'), aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue")
#Primeiramente vou gerar um novo dataset filtrando apenas o Brasil para analise (sem levar em consideração por região)
df_total_brasil <- subset(df_total, Sigla_regiao== 'BR')
ggplot(df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue")
ggplot(df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue")
View(df_total_brasil)
ggplot(df_total_brasil, aes(x=mes),group = 1) +
geom_line(aes(y = CotacaoDolar), color = "darkred") +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue")
ggplot(df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred",group = 1) +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue",group = 1)
+ geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue",group = 1)
str(df_total_brasil)
+ geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue",group = 1)
ggplot(df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred",group = 1)
+ geom_line(aes(y = CotacaoBrentReais  ), color="steelblue",group = 1)
ggplot(df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred",group = 1) +
geom_line(aes(y = CotacaoBrentReais  ), color="steelblue",group = 1)
ggplot(df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred",group = 1) +
geom_line(aes(y = CotacaoBrentReais  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaDistrTransporte  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaRevenda  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaPrecoEtanol  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaPrecoGasolina  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaTribEstadual  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaTribFederal  ), color="steelblue",group = 1) +
geom_line(aes(y = MediaIPCAMes  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue",group = 1) +
teste
ggplot(df_total_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred",group = 1) +
geom_line(aes(y = CotacaoBrentReais  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaDistrTransporte  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaRevenda  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaPrecoEtanol  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaPrecoGasolina  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaTribEstadual  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaTribFederal  ), color="steelblue",group = 1) +
geom_line(aes(y = MediaIPCAMes  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue",group = 1)
colors()
ggplot(subset(df_total, Sigla_regiao== 'BR'), aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred",group = 1) +
geom_line(aes(y = CotacaoBrentReais  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaDistrTransporte  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaRevenda  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaPrecoEtanol  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaPrecoGasolina  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaTribEstadual  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaTribFederal  ), color="steelblue",group = 1) +
geom_line(aes(y = MediaIPCAMes  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaGasolinaBomba  ), color="steelblue",group = 1)
colors()
ggplot(subset(df_media, Sigla_regiao== 'BR'), aes(x=mes)) +
geom_line(aes(y = CotacaoDolar), color = "darkred",group = 1) +
geom_line(aes(y = CotacaoBrentReais  ), color="steelblue",group = 1) +
geom_line(aes(y = mediaDistrTransporte  ), color="seagreen",group = 1) +
geom_line(aes(y = mediaRevenda  ), color="purple",group = 1) +
geom_line(aes(y = mediaPrecoEtanol  ), color="pink1",group = 1) +
geom_line(aes(y = mediaPrecoGasolina  ), color="maroon",group = 1) +
geom_line(aes(y = mediaTribEstadual  ), color="honeydew2",group = 1) +
geom_line(aes(y = mediaTribFederal  ), color="grey22",group = 1) +
geom_line(aes(y = MediaIPCAMes  ), color="aquamarine",group = 1) +
geom_line(aes(y = mediaGasolinaBomba  ), color="brown4",group = 1)
