mediaTribFederal=mean(`Tributos Federais 3`),
mediaDistRev=mean(`Margem Bruta de Distribuição + Revenda 5`),
medianaPrecoEtanol=median(`Preço do Etanol Anidro 2`),
medianaPrecoGasolina=median(`Preço Produtor de Gasolina A Comum1`),
medianaTribEstadual=median(`Tributos Estaduais 4`),
medianaTribFederal=median(`Tributos Federais 3`),
medianaDistRev=median(`Margem Bruta de Distribuição + Revenda 5`)
)
#tira meses a mais de dados
df_impostos3<-df_impostos3%>%filter(mes<'2020-11')
head(df_impostos3)
View(df_impostos3)
head(df_impostos3)
View(df_impostos3)
distinct(df_impostos3,Sigla_regiao)
nrow(df_impostos3)
df_dolar <-read.csv("USD_BRL_Dados_Historicos.csv")
names(df_dolar)[1] <- "DataCotacao"
names(df_dolar)[2] <- "Ultimo"
names(df_dolar)[3] <- "Abertura"
names(df_dolar)[4] <- "Maxima"
names(df_dolar)[5] <- "Minima"
names(df_dolar)[6] <- "Var"
#ajusta a data para ficar igual as outras
df_dolar$DataCotacao <- strptime(df_dolar$DataCotacao, format= "%d.%m.%Y")
format(df_dolar$DataCotacao, format="%Y-%m-%d")
df_dolar$DataCotacao<- as.character(df_dolar$DataCotacao)
df_dolar2<-df_dolar[-c(3,4,5,6)]
#retira meses a mais
df_dolar2<-df_dolar2%>%filter(DataCotacao<'2020-11' & DataCotacao>'2018-06')
df_dolar2$Ultimo<- gsub(',', '.', df_dolar2$Ultimo)
df_dolar2$Ultimo<-as.numeric(df_dolar2$Ultimo)
str(df_dolar2)
View(df_dolar2)
df_brent <-read_excel("BarrilPetroleo/RBRTEd.xls", sheet = 2)
#dropa lixo das primeiras duas linhas
df_brent=df_brent[-c(1,2),]
names(df_brent)[1] <- "DataCotacao"
names(df_brent)[2] <- "ValorBrentEmDolar"
#converte as datas que vieram em dias deste 01/01/1900
df_brent <- df_brent%>% mutate(DataCotacao = as.Date(as.numeric(as.character(DataCotacao)), origin = "1900-01-01"))
#transforma em data
df_brent$DataCotacao <- strptime(df_brent$DataCotacao, format= "%Y-%m-%d")
df_brent$DataCotacao<- as.character(df_brent$DataCotacao)
df_brent$mes<-substr(df_brent$DataCotacao,1,7)
View(df_brent)
#retira meses a mais
df_brent<-df_brent%>%filter(mes<'2020-11' & mes>'2018-06')
df_brent$ValorBrentEmDolar<-as.numeric(df_brent$ValorBrentEmDolar)
View(df_brent)
#junta dados de barril de petroleo e dolar
df_dolar_brent<-merge(df_brent,df_dolar2,by="DataCotacao")
head(df_dolar_brent)
df_dolar_brent$ValorBrentReais=df_dolar_brent$ValorBrentEmDolar*df_dolar_brent$Ultimo
#retira a coluna de data
df_dolar_brent2=df_dolar_brent[-c(1)]#Alterado Felipe
View(df_dolar_brent2)
names(df_dolar_brent2)[3] <- "CotacaoDolar" #Alterado Felipe
names(df_dolar_brent2)[4] <- "CotacaoBrentReais" #Alterado Felipe
#Alterado Felipe
df_dolar_brent3<-df_dolar_brent2%>%group_by(mes)%>%summarize(CotacaoDolar=mean(CotacaoDolar),CotacaoBrentReais=mean(CotacaoBrentReais),ValorBrentEmDolar=mean(ValorBrentEmDolar))
View(df_dolar_brent3)
#Alteração Felipe -------------------------------------
df_imp_dolar_brent<-merge(df_dolar_brent3,df_impostos3,by="mes")
View(df_imp_dolar_brent)
df_preco_gas <- data.frame()
df_ipca <-read_excel("ResultadoFinal_IPCA.xlsx")
df_ipca <-read_excel("ResultadoFinal_IPCA.xlsx")
names(df_ipca)[1] <- "Regiao"
names(df_ipca)[3] <- "Mes_Anterior"
names(df_ipca)[4] <- "IPCA_Mes"
names(df_ipca)[5] <- "Ano"
names(df_ipca)[6] <- "12_meses"
names(df_ipca)[8] <- "Sigla_regiao"
View(df_ipca)
df_ipca$Data <- strptime(df_ipca$Data, format= "%Y-%m-%d")
df_ipca$Data<- as.character(df_ipca$Data)
distinct(df_ipca,Regiao)
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Aracaju']<- 'NE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'São Luís']<- 'NE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Rio Branco']<- 'N'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Salvador']<- 'NE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Belém']<- 'N'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Rio de Janeiro']<- 'SE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Brasília']<- 'CO'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Porto Alegre']<- 'S'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Recife']<- 'NE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Campo Grande']<- 'CO'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'São Paulo']<- 'SE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Belo Horizonte']<- 'SE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Vitória']<- 'SE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Goiânia']<- 'CO'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Curitiba']<- 'S'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Brasil']<- 'BR'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Fortaleza']<- 'NE'
df_ipca["Sigla_regiao"][df_ipca["Regiao"] == 'Grande Vitória']<- 'SE'
df_ipca$mes<-substr(df_ipca$Data,1,7)
View(df_ipca)
df_ipca%>%filter(mes == '2020-03')%>%summarize(Regiao,PesoRegional)
df_ipca%>%filter(Regiao == 'Vitória')%>%summarize(mes,PesoRegional)
#completa os pesos regionais n�o existentes
df_ipca$PesoRegional[df_ipca$Regiao == "São Paulo" & is.na(df_ipca$PesoRegional)] <-32.3
df_ipca$PesoRegional[df_ipca$Regiao == "Porto Alegre" & is.na(df_ipca$PesoRegional)] <-8.61
df_ipca$PesoRegional[df_ipca$Regiao == "Brasília" & is.na(df_ipca$PesoRegional)] <-4.06
df_ipca$PesoRegional[df_ipca$Regiao == "Belém" & is.na(df_ipca$PesoRegional)] <-3.94
df_ipca$PesoRegional[df_ipca$Regiao == "Rio Branco" & is.na(df_ipca$PesoRegional)] <-0.51
df_ipca$PesoRegional[df_ipca$Regiao == "Belo Horizonte" & is.na(df_ipca$PesoRegional)] <-9.69
df_ipca$PesoRegional[df_ipca$Regiao == "Grande Vitória" & is.na(df_ipca$PesoRegional)] <-1.86
df_ipca$PesoRegional[df_ipca$Regiao == "Goiânia" & is.na(df_ipca$PesoRegional)] <-4.17
df_ipca$PesoRegional[df_ipca$Regiao == "Salvador" & is.na(df_ipca$PesoRegional)] <-5.99
df_ipca$PesoRegional[df_ipca$Regiao == "Fortaleza" & is.na(df_ipca$PesoRegional)] <-3.23
df_ipca$PesoRegional[df_ipca$Regiao == "Recife" & is.na(df_ipca$PesoRegional)] <-3.92
df_ipca$PesoRegional[df_ipca$Regiao == "São Luís" & is.na(df_ipca$PesoRegional)] <-1.62
df_ipca$PesoRegional[df_ipca$Regiao == "Aracaju" & is.na(df_ipca$PesoRegional)] <-1.03
df_ipca$PesoRegional[df_ipca$Regiao == "Rio de Janeiro" & is.na(df_ipca$PesoRegional)] <-9.43
df_ipca$PesoRegional[df_ipca$Regiao == "Campo Grande" & is.na(df_ipca$PesoRegional)] <-1.57
df_ipca$PesoRegional[df_ipca$Regiao == "Curitiba" & is.na(df_ipca$PesoRegional)] <-8.09
df_ipca$PesoRegional[df_ipca$Regiao == "Brasil" & is.na(df_ipca$PesoRegional)] <-32.3
View(df_ipca)
df_ipca2<-df_ipca[-c(1,3,5,6,7)]
View(df_ipca2)
df_ipca3=df_ipca2%>%group_by(Sigla_regiao,PesoRegional,mes)%>%summarize(mediaIpcaMes=mean(IPCA_Mes),medianaIpcaMes=median(IPCA_Mes))
df_ipca3%>%group_by()%>%summarize(sum(PesoRegional))
df_ipca3%>%distinct(Sigla_regiao)
df_ipca3$Sigla_regiao<- as.character(df_ipca3$Sigla_regiao)
distinct(df_ipca,Regiao)
unique(df_ipca3$Sigla_regiao)
distinct(df_ipca3,Sigla_regiao)
df_ipca4 <- data.frame(matrix(ncol = 4, nrow = 0))
names(df_ipca4)[1] <- "Sigla_regiao"
names(df_ipca4)[2] <- "mes"
names(df_ipca4)[3] <- "MediaIPCAMes"
names(df_ipca4)[4] <- "MedianaIPCAMes"
str(df_ipca4)
for (reg in unique(df_ipca3$Sigla_regiao))
{
for (month in unique(df_ipca3$mes) )
{
df_tmp<-df_ipca3%>%filter(mes == month & Sigla_regiao == reg)
PesoTotal<-df_tmp%>%group_by()%>%summarize(sum(PesoRegional))
SomaMediaPonderada=0
SomaMedianaPonderada=0
for (i in 1:nrow(df_tmp))
{
SomaMediaPonderada=df_tmp[i,]$PesoRegional*df_tmp[i,]$mediaIpcaMes
SomaMedianaPonderada=df_tmp[i,]$PesoRegional*df_tmp[i,]$medianaIpcaMes
}
df_tmp2 <- data.frame(reg,month,SomaMediaPonderada/PesoTotal,SomaMedianaPonderada/PesoTotal)
#tratamento para primeira linha não alterar nome das colunas
df_ipca4 <- rbind(df_ipca4,setNames(df_tmp2, names(df_ipca4)))
#df_ipca4 <- rbind(df_ipca4,c(Sigla_regiao,mes,mediaIpcaMes,medianaIpcaMes))
# x=sprintf("%s,%s",reg,month)
# print(x)
}
}
View(df_ipca4)
str(df_ipca4)
#cria dataframe final
df_final <- df_imp_dolar_brent %>% inner_join(df_ipca4, by=c("mes","Sigla_regiao"))
View(df_final)
write.csv(df_final, "df_final.csv",row.names=FALSE)
df_total <- read.csv("df_final.csv")
str(df_total)
#calcula preço médio da gasolina na bomba
df_total<-df_total %>%
mutate(mediaGasolinaBomba = select(.,7:12) %>% rowSums(na.rm = TRUE))
#calcula preço por mediana da gasolina na bomba
df_total<-df_total %>%
mutate(medianaGasolinaBomba = select(.,13:18) %>% rowSums(na.rm = TRUE))
View(df_total)
str(df_total)
df_total$ImpPercMed=df_total$mediaTribEstadual*100/df_total$mediaGasolinaBomba
str(df_total)
View(df_total)
df_total <- read.csv("df_final.csv")
#calcula preço médio da gasolina na bomba
df_total<-df_total %>%
mutate(mediaGasolinaBomba = select(.,7:12) %>% rowSums(na.rm = TRUE))
df_total$ImpPercMedia=df_total$mediaTribEstadual*100/df_total$mediaGasolinaBomba
#calcula preço por mediana da gasolina na bomba
df_total<-df_total %>%
mutate(medianaGasolinaBomba = select(.,13:18) %>% rowSums(na.rm = TRUE))
df_total$ImpPercMediana=df_total$medianaTribEstadual*100/df_total$medianaGasolinaBomba
View(df_total)
df_total <- read.csv("df_final.csv")
str(df_total)
View(df_total)
#calcula preço médio da gasolina na bomba
df_total<-df_total %>%
mutate(mediaGasolinaBomba = select(.,6:10) %>% rowSums(na.rm = TRUE))
df_total$ImpPercMedia=df_total$mediaTribEstadual*100/df_total$mediaGasolinaBomba
#calcula preço por mediana da gasolina na bomba
df_total<-df_total %>%
mutate(medianaGasolinaBomba = select(.,11:15) %>% rowSums(na.rm = TRUE))
df_total$ImpPercMediana=df_total$medianaTribEstadual*100/df_total$medianaGasolinaBomba
View(df_total)
write.csv(df_total, "df_final.csv",row.names=FALSE)
df_pim_pf <-read_excel("PIM_PF.xlsx", sheet = 1)
View(df_pim_pf)
#dropa lixo das primeiras 3 linhas
df_pim_pf=df_pim_pf[-c(1,2,3),]
df_pim_pf=df_pim_pf[-c(26),]
df_pim_pf <-read_excel("PIM_PF.xlsx", sheet = 1)
View(df_pim_pf)
#dropa lixo das primeiras 3 linhas
df_pim_pf=df_pim_pf[-c(1,2,3),]
df_pim_pf=df_pim_pf[-c(32),]
df_pim_pf=df_pim_pf[-c(2)]
names(df_pim_pf)[1] <- "Data"
names(df_pim_pf)[2] <- "PIM"
View(df_pim_pf)
df_pim_pf=df_pim_pf[-c(29),]
View(df_pim_pf)
#trata a data para ser igual as outras
df_pim_pf<-df_pim_pf %>%
mutate(Data = str_replace_all(Data, c("janeiro" = "01 01","fevereiro" = "01 02","março" = "01 03","abril" = "01 04","maio"="01 05","junho"="01 06","julho"="01 07","agosto"="01 08","setembro"="01 09","outubro"="01 10","novembro"="01 11","dezembro"="01 12")))
df_pim_pf$Data <- strptime(df_pim_pf$Data, format= "%d %m %Y")
format(df_pim_pf$Data, format="%Y-%m-%d")
df_pim_pf$Data<- as.character(df_pim_pf$Data)
df_pim_pf$mes<-substr(df_pim_pf$Data,1,7)
df_pim_pf=df_pim_pf[-c(1)]
df_total2 <- df_total %>% inner_join(df_pim_pf, by=c("mes"))
View(df_total2)
df_EEF <- read.csv2("Estoque_Empregos_Formais.csv")
View(df_EEF)
df_EEF=df_EEF[-c(29),]
names(df_EEF)[2] <- "Estoque_Empregos"
df_EEF$Data <- strptime(paste('01',df_EEF$Data, sep="/"), format= "%d/%m/%Y")
format(df_EEF$Data, format="%Y-%m-%d")
df_EEF$Data<- as.character(df_EEF$Data)
df_EEF$mes<-substr(df_EEF$Data,1,7)
df_EEF=df_EEF[-c(1)]
df_total3 <- df_total2 %>% inner_join(df_EEF, by=c("mes"))
View(df_total3)
df_cdi <-read.csv("CDI.csv",sep = "\t",dec = ",")
View(df_cdi)
names(df_cdi)[2] <- "N.Operacoes"
names(df_cdi)[4] <- "Media"
names(df_cdi)[5] <- "Fator.Diario"
df_cdi$Data <- strptime(df_cdi$Data, format= "%d/%m/%Y")
format(df_cdi$Data, format="%Y-%m-%d")
df_cdi$Data<- as.character(df_cdi$Data)
df_cdi$mes<-substr(df_cdi$Data,1,7)
'df_cdi2=df_cdi[-c(1,2,3,5,6)]'
View(df_cdi2)
df_cdi3=df_cdi2%>%group_by(mes)%>%summarize(mediaCDI=mean(Media))
View(df_cdi3)
df_cdi <-read.csv("CDI.csv",sep = "\t",dec = ",")
View(df_cdi)
View(df_cdi)
df_cdi <-read.csv("CDI.csv",sep = ";",dec = ",")
View(df_cdi)
names(df_cdi)[2] <- "N.Operacoes"
names(df_cdi)[4] <- "Media"
names(df_cdi)[5] <- "Fator.Diario"
df_cdi$Data <- strptime(df_cdi$Data, format= "%d/%m/%Y")
format(df_cdi$Data, format="%Y-%m-%d")
df_cdi$Data<- as.character(df_cdi$Data)
df_cdi$mes<-substr(df_cdi$Data,1,7)
'df_cdi2=df_cdi[-c(1,2,3,5,6)]'
df_cdi2=df_cdi[-c(1,2,3,5,6,7,8,9)]
View(df_cdi2)
View(df_cdi)
df_cdi2=df_cdi[-c(1,2,3,5,6,7,8,9.10)]
View(df_cdi2)
df_cdi2=df_cdi[-c(1,2,3,5,6,7,8,9,10)]
View(df_cdi2)
df_cdi3=df_cdi2%>%group_by(mes)%>%summarize(mediaCDI=mean(Media))
View(df_cdi3)
df_total4 <- df_total3 %>% inner_join(df_cdi3, by=c("mes"))
View(df_total4)
df_ibc<-read.csv("IBC.csv",sep = ";",dec = ",")
View(df_ibc)
df_ibc=df_ibc[-c(29),]
names(df_ibc)[2] <- "IBC"
df_ibc$Data <- strptime(paste('01',df_ibc$Data, sep="/"), format= "%d/%m/%Y")
format(df_ibc$Data, format="%Y-%m-%d")
df_ibc$Data<- as.character(df_ibc$Data)
df_ibc$mes<-substr(df_ibc$Data,1,7)
df_ibc=df_ibc[-c(1)]
df_total5 <- df_total4 %>% inner_join(df_ibc, by=c("mes"))
View(df_total5)
write.csv(df_total5, "df_final.csv",row.names=FALSE)
df_total5 <- read.csv("df_final.csv")
View(df_total5)
df_mr <-read_excel("MassaRendimento.xlsx", sheet = 1)
View(df_mr_transpose)
View(df_mr_transpose)
df_mr <-read_excel("MassaRendimento.xlsx", sheet = 1)
View(df_mr)
df_mr=df_mr[-c(1,2,5),]
df_mr_transpose <- as.data.frame(t(as.matrix(df_mr)))
View(df_mr_transpose)
names(df_mr_transpose)[1] <- "Data"
names(df_mr_transpose)[2] <- "MassaRendimento"
df_mr_transpose=df_mr_transpose[-c(1),]
str(df_mr_transpose)
head(df_mr_transpose)
df_mr_transpose$Data2
strsplit(as.character(df_mr_transpose$Data[1]), "-")[[1]][3]
df_mr_transpose$Data2<-lapply(df_mr_transpose$Data, function(x){
#mean.pl <- mean(x$petal.length)
Data2<-strsplit(as.character(x), "-")[[1]][3]
})
df_mr_transpose<-df_mr_transpose %>%
mutate(Data2= str_replace_all(Data2, c("jan" = "01 01","fev" = "01 02","mar" = "01 03","abr" = "01 04","mai"="01 05","jun"="01 06","jul"="01 07","ago"="01 08","set"="01 09","out"="01 10","nov"="01 11","dez"="01 12")))
df_mr_transpose$Data2 <- strptime(df_mr_transpose$Data2, format= "%d %m %Y")
format(df_mr_transpose$Data2, format="%Y-%m-%d")
df_mr_transpose$Data2<- as.character(df_mr_transpose$Data2)
df_mr_transpose$mes<-substr(df_mr_transpose$Data2,1,7)
df_mr_transpose=df_mr_transpose[-c(1,3)]
View(df_mr_transpose)
df_total6 <- df_total5 %>% inner_join(df_mr_transpose, by=c("mes"))
View(df_total6)
write.csv(df_total, "df_final.csv",row.names=FALSE)
df_total <- read.csv("df_final.csv")
View(df_total)
write.csv(df_total6, "df_final.csv",row.names=FALSE)
df_total <- read.csv("df_final.csv")
View(df_total)
str(df_total)
str(df_total)
#mantem os valores de média
df_media=df_total[c(1,2,3,4,5,6,7,8,9,10,16,19,22,23,24,25,18)]
str(df_media)
#mantem os valores de média
df_media=df_total[c(1,2,3,4,5,6,7,8,9,10,16,19,22,23,24,25,26,18)]
str(df_media)
#Mantém os valores de mediana
df_mediana=df_total[c(1,2,3,4,5,11,12,13,14,15,17,21,22,23,24,25,20)]
str(df_mediana)
#Mantém os valores de mediana
df_mediana=df_total[c(1,2,3,4,5,11,12,13,14,15,17,21,22,23,24,25,26,20)]
str(df_mediana)
View(df_mediana)
#serão utilizadas as medianas nas nossas análises, e será analisado somente o Brasil
df_brasil <- subset(df_mediana, Sigla_regiao== 'BR')
df_brasil=df_brasil[-c(4,5)]
View(df_brasil)
str(df_brasil)
names(df_brasil)[2] <- "Dolar"
names(df_brasil)[3] <- "CtBarril"
names(df_brasil)[4] <- "Etanol"
names(df_brasil)[5] <- "GasolProdr"
names(df_brasil)[6] <- "TribEst"
names(df_brasil)[7] <- "TribFed"
names(df_brasil)[8] <- "DistrRev"
names(df_brasil)[9] <- "IPCA"
names(df_brasil)[10] <- "PCTribEst"
names(df_brasil)[12] <- "EstEmp"
names(df_brasil)[13] <- "CDI"
names(df_brasil)[15] <- "MRed"
names(df_brasil)[16] <- "GasolNaBomba"
df_brasil$IBC = as.numeric(gsub(",", ".", df_brasil$IBC ))
head(df_brasil)
str(df_brasil)
df_brasil$EstEmp = gsub("\\.","",df_brasil$EstEmp)
head(df_brasil)
df_brasil$EstEmp = as.numeric(gsub(",",".",df_brasil$EstEmp))
write.csv(df_brasil, "df_brasil.csv",row.names=FALSE)
write.csv(df_brasil, "df_brasil.csv",row.names=FALSE)
summary(df_brasil, maxsum = max(lengths(lapply(df_brasil, unique))))
View(df_brasil)
setwd("E:/Estudos/Trabalho_Bloco_A")
getwd()
library(dplyr)
library(tidyr) #adc por felipe para transpor a coluna em varias colunas
library(ggplot2)
#install.packages("viridis")
library(viridis)
#install.packages("patchwork")
library(patchwork) # Mostrar dois gráficos ao lado
library(modelr)
#library(tidyverse)
library(corrplot)
#install.packages("corrplot")
library(psych)
#install.packages("psych")
df_brasil <- read.csv("df_brasil.csv")
#verificando linhas duplicadas
sum(duplicated(df_brasil))
#verifica se tem registros nulos
sum(is.na(df_brasil))
#Estatísticas básicas: mínimos, máximos, médias, desvios, etc. de cada variável;
summary(df_brasil, maxsum = max(lengths(lapply(df_total, unique))))
#Estatísticas básicas: mínimos, máximos, médias, desvios, etc. de cada variável;
summary(df_brasil, maxsum = max(lengths(lapply(df_brasil, unique))))
df_brasil_cor <- df_brasil
for(i in 1:ncol(df_brasil_cor)){
df_brasil_cor[,i]<- as.numeric(df_brasil_cor[,i])
}
str(df_brasil_cor)
corrplot(cor(df_brasil_cor,method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_cor,method = "spearman"), method = "number", type = "lower")
corrplot(cor(df_brasil_cor,method = "pearson"), method = "circle", type = "lower")
corrplot(cor(df_brasil_cor,method = "spearman"), method = "circle", type = "lower")
#Gráfico da variação do dolar e do barril de petroleo (brent)
linhaDolar <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar, group=1), color = "darkred", size=2)+
ggtitle("Cotação dólar 2018-07 até 2020-07") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaBrent <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoBarrilPetroleoBrent, group=2), color = "steelblue", size=2)+
ggtitle("Cotação Barril em Real 2018-07 até 2020-07") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
#gráfico da variação do preço da gasolina pelo produtor
linhaVarProdutor <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = mediaPrecoGasolina, group=1), color = "darkred", size=2)+
ggtitle("Preço produtor gasolina 2018-07 até 2020-07") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaDolar+linhaBrent+linhaVarProdutor
linhaDolar <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = CotacaoDolar, group=1), color = "darkred", size=2)+
ggtitle("Cotação dólar 2018-07 até 2020-07") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaDolar
#Gráfico da variação do dolar e do barril de petroleo (brent)
linhaDolar <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = Dolar, group=1), color = "darkred", size=2)+
ggtitle("Cotação dólar 2018-07 até 2020-07") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaDolar
linhaBrent <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = CtBarril, group=2), color = "steelblue", size=2)+
ggtitle("Cotação Barril em Real 2018-07 até 2020-07") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
#gráfico da variação do preço da gasolina pelo produtor
linhaVarProdutor <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = GasolNaBomba, group=1), color = "darkred", size=2)+
ggtitle("Preço produtor gasolina 2018-07 até 2020-07") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaDolar+linhaBrent+linhaVarProdutor
#Gráfico da variação do dolar e do barril de petroleo (brent)
linhaDolar <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = Dolar, group=1), color = "darkred", size=2)+
ggtitle("Cotação dólar") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaDolar
linhaBrent <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = CtBarril, group=2), color = "steelblue", size=2)+
ggtitle("Cotação Barril em Real") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
#gráfico da variação do preço da gasolina pelo produtor
linhaVarProdutor <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = GasolNaBomba, group=1), color = "darkred", size=2)+
ggtitle("Preço gasolina") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaVarProdutor <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = IBC, group=1), color = "darkred", size=2)+
ggtitle("IBC") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaIBC <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = IBC, group=1), color = "darkred", size=2)+
ggtitle("IBC") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaDolar+linhaBrent+linhaVarGas+linhaIBC
#gráfico da variação do preço da gasolina pelo produtor
linhaVarGas <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = GasolNaBomba, group=1), color = "darkred", size=2)+
ggtitle("Preço gasolina") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaIBC <- ggplot(data=df_brasil, aes(x=mes)) +
geom_line(aes(y = IBC, group=1), color = "darkred", size=2)+
ggtitle("IBC") +
ylab("Cotação")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
linhaDolar+linhaBrent+linhaVarGas+linhaIBC
df_brasil_pre_cor<-df_brasil%>%filter(mes<'2020-01')
df_brasil_pre_cor<-df_brasil%>%filter(mes < "2020-01")
df_brasil_pre_cor<-df_brasil%>%filter(as.character(mes) < "2020-01")
View(df_brasil_pre_cor)
df_brasil_pos_cor<-df_brasil%>%filter(as.character(mes) >= "2020-01")
View(df_brasil_pos_cor)
#pre covid
str(df_brasil_pre_cor)
corrplot(cor(df_brasil_pre_cor[-1],method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor[-c(1)],method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor,method = "pearson"), method = "number", type = "lower")
df_brasil_pre_cor_cor <- df_brasil_pre_cor
for(i in 1:ncol(df_brasil_pre_cor)){
df_brasil_pre_cor_cor[,i]<- as.numeric(df_brasil_pre_cor[,i])
}
corrplot(cor(df_brasil_pre_cor_cor,method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor,method = "spearman"), method = "number", type = "lower")
View(df_brasil_pre_cor)
View(df_brasil_pre_cor_cor)
str(df_brasil_pre_cor_cor)
corrplot(cor(df_brasil_pre_cor_cor,), method = "number", type = "lower")
?cor
corrplot(cor(df_brasil_cor,method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor,method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor,method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor,method = "spearman"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor,method = "pearson"), method = "circle", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor[-1],method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor[-1],method = "pearson"), method = "number", type = "lower")
?cor
corrplot(cor(df_brasil_pre_cor_cor[-1],method = "pearson"), method = "number", type = "lower")
str(df_brasil_pos_cor)
df_brasil_pos_cor_cor <- df_brasil_pos_cor
df_brasil_pos_cor_cor <- df_brasil_pos_cor
for(i in 1:ncol(df_brasil_pos_cor)){
df_brasil_pos_cor_cor[,i]<- as.numeric(df_brasil_pos_cor[,i])
}
View(df_brasil_pos_cor_cor)
str(df_brasil_pos_cor_cor)
corrplot(cor(df_brasil_pos_cor_cor[-1],method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pos_cor_cor[-1],method = "pearson"), method = "circle", type = "lower")
corrplot(cor(df_brasil_pos_cor_cor[-1],method = "spearman"), method = "number", type = "lower")
corrplot(cor(df_brasil_pos_cor_cor[-1],method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor[-1],method = "pearson"), method = "number", type = "lower")
corrplot(cor(df_brasil_pre_cor_cor[-1],method = "pearson"), method = "circle", type = "lower")
corrplot(cor(df_brasil_pos_cor_cor[-1],method = "pearson"), method = "circle", type = "lower")
